
    <script src="js/pixi.min.js"></script>
    <script>
        let app;
        let player;
        let keys = {};
        let keysDiv;
        let bullets = [];
        let bulletSpeed = 10;
        let enemy;
        let coltest = 1;
        let enemies = [];

        window.onload = function() {
            app = new PIXI.Application(
                {
                    width: 800,
                    height: 600,
                    backgroundColor: 0000000
                }
            );

            document.querySelector("#gameDiv").appendChild(app.view)
            app.stage.interactive = true;
            document.querySelector("#gameDiv").addEventListener("pointerdown", firebullet);

        // player object
            player = new PIXI.Sprite.from("images/ship1.png");
            player.anchor.set(0.5);
            player.x = app.view.width / 2;
            player.y = app.view.height / 2;

            app.stage.addChild(player);
        //player object END
            
        // enemy object
            enemy = new PIXI.Sprite.from("images/shiptest.png");
            enemy.anchor.set(0.5);
            enemy.x = app.view.width - 16;
            enemy.y = app.view.height / 2;

            app.stage.addChild(enemy);

            app.ticker.add(gameLoopEnemy)
        // enemy object END

        //constant enemies
            app.ticker.add(gameLoopEnemies);
        //constant enemies END

        // bullets
            app.ticker.add(gameLoopBullets);
        // bullets END
            
            // _____MOUSE_INTERACTION_____
            // app.stage.interactive = true;
            // app.stage.on("pointermove", movePlayer);
            

        // keyboard event handlers
            window.addEventListener("keydown", keysDown);
            window.addEventListener("keyup", keysUp);

            app.ticker.add(gameLoop);

            keysDiv = document.querySelector("#keys")
        // keyboard event handlers END

        }



        //______________MOUSE_INTERACTION________________
        // function movePlayer(e) {
        //     let pos = e.data.global;
        //     player.x = pos.x;
        //     player.y = pos.y;
        // }
        
    //_____ENEMY_LOGIC_____
        function gameLoopEnemy(delta) {
            enemy.x -= coltest;

            if (rectsIntersect(player, enemy)) {
                coltest = 0;
            }
    //_____ENEMY_LOGIC_END_____

            
        }
        // collision
        function rectsIntersect(a, b) {
            let aBox = a.getBounds();
            let bBox = b.getBounds();

            return aBox.x + aBox.width > bBox.x &&
                   aBox.x < bBox.x + bBox.width &&
                   aBox.y + aBox.height > bBox.y &&
                   aBox.y < bBox.y + bBox.height;
        // colision END
        }

    //_____END_OF_ENEMY_LOGIC_____

    //_____CONSTANT_ENEMIES_____
        
    setInterval(function(){ 
            console.log("Oooo Yeaaa!");
            let constEnemy = createEnemies();
            enemies.push(constEnemy);
            
        }, 1000);
    
        // function spawnEnemies() {
            
        //     let constEnemy = createEnemies();
        //     enemies.push(constEnemy);

            

        // }

        function createEnemies() {
            let constEnemy = new PIXI.Sprite.from("images/Enemies.png");
            constEnemy.anchor.set(0);
            constEnemy.x = app.view.width - 16;
            constEnemy.y = app.view.height / 2;
            constEnemy.speed = coltest;
            app.stage.addChild(constEnemy);

            return constEnemy;
        }

        function updateEnemies(delta) {
            for (let i = 0; i < enemies.length; i++) {
                enemies[i].position.x -= enemies[i].speed;

                if (enemies[i].position.x < 0) {
                    enemies[i].dead = true; 
                }


                
                
            }

            for (let i = 0; i < enemies.length; i++) {
               if (enemies[i].dead) {
                   app.stage.removeChild(enemies[i]);
                   enemies.splice(i, 1); 
                }
            }

        }

        function gameLoopEnemies(delta) {
            updateEnemies(delta)
            
        }
    //_____CONSTANT_ENEMIES_END_____

    //_______BULLET_LOGIC________
        function firebullet(e) {
            console.log("FIRE!!");

            let bullet = createBullet();
            bullets.push(bullet);

        }

        function createBullet() {
            let bullet = new PIXI.Sprite.from("images/bulletTest.png");
            bullet.anchor.set(0);
            bullet.x = player.x;
            bullet.y = player.y+6;
            bullet.speed = bulletSpeed;
            app.stage.addChild(bullet);

            return bullet;
        }

        function updateBullets(delta) {
            for (let i = 0; i < bullets.length; i++) {
                bullets[i].position.x += bullets[i].speed;

                if (bullets[i].position.x < 0) {
                    bullets[i].dead = true; 
                }
                
                if (rectsIntersect(bullets[i], enemy)) {
                coltest = 0;
                app.stage.removeChild(bullets[i]);
                bullets.splice(i, 1);             }

                if (rectsIntersect(bullets[i], enemies[i])) {
                    coltest = 0;
                    app.stage.removeChild(bullets[i]);
                    bullets.splice(i, 1);             
                    app.stage.removeChild(enemies[i]);
                    enemies.splice(i, 1);             
                }
                
            }

            for (let i = 0; i < bullets.length; i++) {
               if (bullets[i].dead) {
                   app.stage.removeChild(bullets[i]);
                   bullets.splice(i, 1); 
                }
            }

        }

        function gameLoopBullets(delta) {
            updateBullets(delta)
            
        }
    //_____END_OF_BULLET_LOGIC_____


    // _____MOVEMENT_LOGIC_____
        function keysDown(e) {
            // console.log(e.keyCode);
            keys[e.keyCode] = true; 
        }

        function keysUp(e) {
            // console.log(e.keyCode);
            keys[e.keyCode] = false;
        }

        function gameLoop() {
            keysDiv.innerHTML = JSON.stringify(keys);

            // W
            if (keys["87"]) {
                player.y -= 5;
            }
            // A
            if (keys["65"]) {
                player.x -= 5;
            } 
            // S
            if (keys["83"]) {
                player.y += 5;
            } 
            // D
            if (keys["68"]) {
                player.x += 5;
            }
        }
    //_____END_OF_MOVEMENT_LOGIC_____
        

    </script>
</head>
<body>
    <div id="keys"></div>
    <div id="gameDiv"></div>
</body>
</html>